name: gh-linkchecker
description: >-
  TODO
branding:
  icon: link
  color: green
inputs:
  urls:
    required: false
    description: >-
      Space-separated list of URLs to crawl
      (default: GitHub Pages URL of the invoking repository)
  linkcheckerrc:
    required: false
    default: ''
    description: >-
      Configuration file for LinkChecker
  custom-jq-filter:
    required: false
    default: '.'
    description: >-
      Custom jq filter/program that can be used to implement complex ignore
      rules that can't be expressed in linkcheckerrc, such as turning warnings
      into errors or ignoring only temporary redirects but not permanent
      redirects.
  retries:
    required: false
    default: '1'
    description: >-
      Maximum number of retries
      (default: 1)
runs:
  using: composite
  steps:
    - name: Get pages URL
      id: get-url
      if: inputs.urls == ''
      env:
        GITHUB_TOKEN: ${{ github.token }}
      shell: sh
      run: |
        url=$(gh api --jq .html_url repos/${{ github.repository }}/pages)
        echo "url=$url" >> $GITHUB_OUTPUT

    - name: Install latest jq
      shell: sh
      run: |
        echo "::group::Install latest jq"
        mkdir -p ~/.local/bin
        wget -O ~/.local/bin/jq https://github.com/jqlang/jq/releases/latest/download/jq-linux-amd64
        chmod +x ~/.local/bin/jq
        echo ~/.local/bin >> $GITHUB_PATH
        echo "::endgroup::"

    - name: Install LinkChecker
      uses: liskin/gh-pipx@v1
      with:
        packages: >-
          'LinkChecker >= 10.4'

    - name: Run LinkChecker
      id: run
      env:
        LINKCHECKERRC: ${{ inputs.linkcheckerrc }}
        CUSTOM_JQ_FILTER: ${{ inputs.custom-jq-filter }}
        RETRIES: ${{ inputs.retries }}
      shell: sh
      run: |
        $GITHUB_ACTION_PATH/run.sh ${{ inputs.urls || steps.get-url.outputs.url }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linkchecker
        path: |
          ${{ steps.run.outputs.dir }}/*.sql
          ${{ steps.run.outputs.dir }}/*.json
